{"ast":null,"code":"var _jsxFileName = \"/Users/maveen/Documents/frontend/src/pages/NotePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotePage = _ref => {\n  _s();\n  let {\n    match,\n    history\n  } = _ref;\n  let noteId = match.params.id; //This is gonna give us the note id\n\n  let [note, setNote] = useState(null);\n  useEffect(() => {\n    getNote();\n  }, [noteId]);\n  let getNote = async () => {\n    // this is gonna call the db\n    let response = await fetch(`/api/notes/${noteId}/`); // we are getting the note id from url and then making the request\n    let data = await response.json();\n    setNote(data); // updating the state\n  };\n\n  let updateNote = async () => {\n    fetch(`/api/notes/${noteId}/update/`, {\n      method: \"PUT\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n  };\n  let deleteNote = async () => {\n    fetch(`/api/notes/${noteId}/delete/`, {\n      method: \"DELETE\"\n    });\n  };\n  let handleSubmit = () => {\n    updateNote();\n    history.push('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        onClick: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(ArrowLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        setNote({\n          ...note,\n          'body': e.target.value\n        });\n      },\n      defaultValue: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(NotePage, \"k41NuHLtMLNqVoRGkWqAFGkbS8Y=\");\n_c = NotePage;\nexport default NotePage;\nvar _c;\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["React","useState","useEffect","ReactComponent","ArrowLeft","NotePage","match","history","noteId","params","id","note","setNote","getNote","response","fetch","data","json","updateNote","method","headers","body","JSON","stringify","deleteNote","handleSubmit","push","e","target","value"],"sources":["/Users/maveen/Documents/frontend/src/pages/NotePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg'\n\nconst NotePage = ({ match, history }) => {\n\n    let noteId = match.params.id //This is gonna give us the note id\n\n    let [note, setNote] = useState(null)\n\n    useEffect(() => {\n        getNote()\n\n    }, [noteId])\n\n    let getNote = async () => { // this is gonna call the db\n        let response = await fetch(`/api/notes/${noteId}/`) // we are getting the note id from url and then making the request\n        let data = await response.json()\n        setNote(data) // updating the state\n    }\n\n    let updateNote = async () => {\n        fetch(`/api/notes/${noteId}/update/`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(note)\n        })\n\n    }\n\n    let deleteNote = async ()=>{\n        fetch(`/api/notes/${noteId}/delete/`,{\n            method: \"DELETE\"\n        })\n    }\n\n    let handleSubmit = () => {\n        updateNote()\n        history.push('/')\n    }\n\n    return (\n        <div className=\"note\">\n            <div className=\"note-header\">\n\n                <h3 onClick={handleSubmit}><ArrowLeft /></h3>\n\n\n            </div>\n            {/* onChange: as every change we are calling the onChange method and we are updating the state */}\n            <textarea onChange={(e) => { setNote({ ...note, 'body': e.target.value }) }} defaultValue={note?.body}></textarea>\n        </div >\n    )\n}\n\nexport default NotePage"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,IAAIC,SAAS,QAAQ,0BAA0B;AAAA;AAEtE,MAAMC,QAAQ,GAAG,QAAwB;EAAA;EAAA,IAAvB;IAAEC,KAAK;IAAEC;EAAQ,CAAC;EAEhC,IAAIC,MAAM,GAAGF,KAAK,CAACG,MAAM,CAACC,EAAE,EAAC;;EAE7B,IAAI,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACZW,OAAO,EAAE;EAEb,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;EAEZ,IAAIK,OAAO,GAAG,YAAY;IAAE;IACxB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,cAAaP,MAAO,GAAE,CAAC,EAAC;IACpD,IAAIQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAChCL,OAAO,CAACI,IAAI,CAAC,EAAC;EAClB,CAAC;;EAED,IAAIE,UAAU,GAAG,YAAY;IACzBH,KAAK,CAAE,cAAaP,MAAO,UAAS,EAAE;MAClCW,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI;IAC7B,CAAC,CAAC;EAEN,CAAC;EAED,IAAIa,UAAU,GAAG,YAAU;IACvBT,KAAK,CAAE,cAAaP,MAAO,UAAS,EAAC;MACjCW,MAAM,EAAE;IACZ,CAAC,CAAC;EACN,CAAC;EAED,IAAIM,YAAY,GAAG,MAAM;IACrBP,UAAU,EAAE;IACZX,OAAO,CAACmB,IAAI,CAAC,GAAG,CAAC;EACrB,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,MAAM;IAAA,wBACjB;MAAK,SAAS,EAAC,aAAa;MAAA,uBAExB;QAAI,OAAO,EAAED,YAAa;QAAA,uBAAC,QAAC,SAAS;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QAG3C,eAEN;MAAU,QAAQ,EAAGE,CAAC,IAAK;QAAEf,OAAO,CAAC;UAAE,GAAGD,IAAI;UAAE,MAAM,EAAEgB,CAAC,CAACC,MAAM,CAACC;QAAM,CAAC,CAAC;MAAC,CAAE;MAAC,YAAY,EAAElB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEU;IAAK;MAAA;MAAA;MAAA;IAAA,QAAY;EAAA;IAAA;IAAA;IAAA;EAAA,QAC/G;AAEf,CAAC;AAAA,GAnDKhB,QAAQ;AAAA,KAARA,QAAQ;AAqDd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}